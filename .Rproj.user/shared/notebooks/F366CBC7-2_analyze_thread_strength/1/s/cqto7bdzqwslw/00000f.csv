"0",""
"0","# filter the data to only include the control and OW treatment"
"0","thread_plot_OW_all <- thread_plot %>% filter(treatment == ""control"" | treatment == ""OW"")"
"0",""
"0","# filter the data to only include the control and OW treatments"
"0","thread_plot_OW_repeated <- thread_plot %>%"
"0","  filter(treatment %in% c(""control"", ""OW"")) %>%"
"0","  group_by(mussel) %>%"
"0","  filter(n_distinct(treatment) == 2)"
"0",""
"0","# Create a new dataframe called ""thread_plot_OW_mean"" using the ""group_by"" and ""summarize"" functions in ""dplyr"""
"0","thread_plot_OW_mean <- thread_plot %>%"
"0","  filter(treatment %in% c(""control"", ""OW"")) %>%"
"0","  group_by(mussel, treatment) %>% "
"2","`summarise()` has grouped output by 'mussel'. You can override using the `.groups` argument."
"0","p1 <- ggplot(thread_plot_OW_all, aes(x=treatment, y=adhesion_kpa, group=as.factor(mussel))) +"
"0","      geom_point() +"
"0","      # facet_wrap(~ID) +"
"0","      # scale_color_manual(values=c(""royalblue4"",""royalblue1"")) +"
"0","      #   scale_y_continuous(breaks = seq(0, 2.5, 0.5), limits = c(0, 2.7)) +"
"0","      # scale_x_continuous(breaks = seq(0, 30, 5), limits = c(0, 32)) +"
"0","      xlab(NULL) + ylab(NULL) + my_theme"
"0","p1"

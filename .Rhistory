dpi    = 1200,
device = "png",
width  = 4,
height = 4,
units  = "in")
# Define dataset for analysis, factors
dat_stat <- thread_plot_OW_all
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# ChatGPT prompt:
# All data is in the "thread_plot_OW_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov funtion.# All data is in the "thread_plot_OW_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov function.
# This will generate an ANOVA model with "treatment" as the fixed effect and "mussel" and "thread" as random grouping factors.
# The "Error" term specifies that you want a within-subjects design, with the "mussel" and "thread" factors nested within each other.
my_test <- aov(response ~ trt + Error(ID/thread), data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_DO_all
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# ChatGPT prompt:
# All data is in the "thread_plot_DO_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov funtion.# All data is in the "thread_plot_DO_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov function.
# This will generate an ANOVA model with "treatment" as the fixed effect and "mussel" and "thread" as random grouping factors.
# The "Error" term specifies that you want a within-subjects design, with the "mussel" and "thread" factors nested within each other.
my_test <- aov(response ~ trt + Error(ID/thread), data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_DO_all
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# ChatGPT prompt:
# All data is in the "thread_plot_DO_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov funtion.# All data is in the "thread_plot_DO_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov function.
# This will generate an ANOVA model with "treatment" as the fixed effect and "mussel" and "thread" as random grouping factors.
# The "Error" term specifies that you want a within-subjects design, with the "mussel" and "thread" factors nested within each other.
my_test <- aov(response ~ trt + Error(ID/thread), data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_OW_all
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# ChatGPT prompt:
# All data is in the "thread_plot_OW_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov funtion.# All data is in the "thread_plot_OW_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov function.
# This will generate an ANOVA model with "treatment" as the fixed effect and "mussel" and "thread" as random grouping factors.
# The "Error" term specifies that you want a within-subjects design, with the "mussel" and "thread" factors nested within each other.
my_test <- aov(response ~ trt + Error(ID/thread), data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_OA_all
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, OAn't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# ChatGPT prompt:
# All data is in the "thread_plot_OA_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov funtion.# All data is in the "thread_plot_OA_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov function.
# This will generate an ANOVA model with "treatment" as the fixed effect and "mussel" and "thread" as ranOAm grouping factors.
# The "Error" term specifies that you want a within-subjects design, with the "mussel" and "thread" factors nested within each other.
my_test <- aov(response ~ trt + Error(ID/thread), data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_OW_all
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# ChatGPT prompt:
# All data is in the "thread_plot_OW_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov funtion.# All data is in the "thread_plot_OW_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov function.
# This will generate an ANOVA model with "treatment" as the fixed effect and "mussel" and "thread" as random grouping factors.
# The "Error" term specifies that you want a within-subjects design, with the "mussel" and "thread" factors nested within each other.
my_test <- aov(response ~ trt + Error(ID/thread), data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_DO_all
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# ChatGPT prompt:
# All data is in the "thread_plot_DO_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov funtion.# All data is in the "thread_plot_DO_all" dataframe. Multiple mussels were repeatedly sampled. Mussels were given a unique ID, reported in the "mussel" column. Each Mussel produced multiple threads before and after exposure to a "treatment". Each thread is unique and given a label in the "thread" column. The strength of threads were tested and reported as "adhesion_kpa". Generate a repeated measures anova that tests the impact of "treatment" on "adhesion_kpa". Use the aov function.
# This will generate an ANOVA model with "treatment" as the fixed effect and "mussel" and "thread" as random grouping factors.
# The "Error" term specifies that you want a within-subjects design, with the "mussel" and "thread" factors nested within each other.
my_test <- aov(response ~ trt + Error(ID/thread), data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# Run repeated measures anova using oyster ID has random effect
# https://www.r-bloggers.com/2015/08/two-way-anova-with-repeated-measures/
my_test <- aov(response ~ (trt * thread * pad) +
Error(1/ID), # Error(1|(factor(ID)/factor(trt))),
data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# Run repeated measures anova using oyster ID has random effect
# https://www.r-bloggers.com/2015/08/two-way-anova-with-repeated-measures/
my_test <- aov(response ~ (trt * thread * pad) +
Error(ID/thread), # Error(1|(factor(ID)/factor(trt))),
data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# Run repeated measures anova using oyster ID has random effect
# https://www.r-bloggers.com/2015/08/two-way-anova-with-repeated-measures/
my_test <- aov(response ~ (trt * thread * pad), # Error(1|(factor(ID)/factor(trt))),
data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot
test_me  <- dat_stat$adhesion_kpa
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# Run repeated measures anova using oyster ID has random effect
# https://www.r-bloggers.com/2015/08/two-way-anova-with-repeated-measures/
my_test <- aov(response ~ trt, # Error(1|(factor(ID)/factor(trt))),
data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_all_mean
test_me  <- dat_stat$adhesion_kpa_mean
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
dat_stat$thread     <- factor(dat_stat$thread)
# Define dataset for analysis, factors
dat_stat <- thread_plot_all_mean
test_me  <- dat_stat$adhesion_kpa_mean
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
# dat_stat$thread     <- factor(dat_stat$thread)
# dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# Run repeated measures anova using oyster ID has random effect
# https://www.r-bloggers.com/2015/08/two-way-anova-with-repeated-measures/
my_test <- aov(response ~ trt, # Error(1|(factor(ID)/factor(trt))),
data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_all_mean
test_me  <- dat_stat$adhesion_kpa_mean
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
# dat_stat$thread     <- factor(dat_stat$thread)
# dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# Run repeated measures anova using oyster ID has random effect
# https://www.r-bloggers.com/2015/08/two-way-anova-with-repeated-measures/
my_test <- aov(response ~ trt + Error(ID), # Error(1|(factor(ID)/factor(trt))),
data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
# Define dataset for analysis, factors
dat_stat <- thread_plot_all_repeated_mean
# Define dataset for analysis, factors
dat_stat <- thread_plot_repeated_mean
test_me  <- dat_stat$adhesion_kpa_mean
dat_stat$ID         <- factor(dat_stat$mussel)
dat_stat$trt        <- factor(dat_stat$treatment)
# dat_stat$thread     <- factor(dat_stat$thread)
# dat_stat$pad        <- factor(dat_stat$pad_area)
# Test for normality
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
norm_test <- shapiro.test(test_me) # p-value fail = good, don't need transformation
print(norm_test$p.value)
# Normalize data if normality test failed
if(norm_test$p.value<0.05)     {
normalized <- bestNormalize(test_me)
test_me <- normalized$x.t # overwrite
qqnorm(test_me) # check linearity of transformed data
qqline(test_me)
print(shapiro.test(test_me))
print("transformed!",quote=FALSE)}
dat_stat$response <- test_me
# Run repeated measures anova using oyster ID has random effect
# https://www.r-bloggers.com/2015/08/two-way-anova-with-repeated-measures/
my_test <- aov(response ~ trt + Error(ID), # Error(1|(factor(ID)/factor(trt))),
data = dat_stat)
my_test_summary <- summary(my_test)
summary(my_test)
# Significant interaction observed between timepoint:trt:ploidy. Proceed with HSD test.
tx <- with(dat_stat, interaction(trt))
amod <- aov(response ~ tx, data = dat_stat)
mult_comp <- HSD.test(amod, "tx", group=TRUE, console=TRUE)
#
# # save output
# write.table(my_test_summary$`Error: Within`[[1]], file = "stats/respirometry/AOV_respirometry.csv",      row.names = TRUE)
# write.table(mult_comp$groups,                     file = "stats/respirometry/HSD_test_respirometry.csv", row.names = TRUE)
